{"ast":null,"code":"var _jsxFileName = \"/home/sandro/react/react-todo/src/Components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TODO_ACTIONS } from './Todoactions.js';\nimport { INITIAL_TODO } from './PostTodo.jsx';\nimport { useReducer } from 'react';\nimport { PostTodo } from './PostTodo.jsx';\n// import { TaskCard } from './TaskCard.jsx'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = () => {\n  _s();\n  const [state, dispatch] = useReducer(PostTodo, INITIAL_TODO);\n  const [task, settask] = useState('');\n  function handelsubmit(e) {\n    e.preventDefault();\n    const newtodo = {\n      time: Date.now(),\n      description: task,\n      isCOmpleted: false\n    };\n    dispatch({\n      type: TODO_ACTIONS.ADD_TODO,\n      payload: newtodo\n    });\n    console.log(task);\n    console.log(state);\n    settask('');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        handelsubmit(e);\n      },\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: task,\n        onChange: e => {\n          settask(e.target.value);\n          // console.log(task)\n          // console.log(state)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"ADD TASK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), state.items.map(e => {\n      /*#__PURE__*/_jsxDEV(\"p\", {\n        children: e.description\n      }, e.time, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"THJZoKqy2FC8KPqsIqG2CHOS6Vw=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","TODO_ACTIONS","INITIAL_TODO","useReducer","PostTodo","jsxDEV","_jsxDEV","TodoForm","_s","state","dispatch","task","settask","handelsubmit","e","preventDefault","newtodo","time","Date","now","description","isCOmpleted","type","ADD_TODO","payload","console","log","children","onSubmit","style","display","flexDirection","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","items","map","_c","$RefreshReg$"],"sources":["/home/sandro/react/react-todo/src/Components/TodoForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { TODO_ACTIONS } from './Todoactions.js'\nimport { INITIAL_TODO } from './PostTodo.jsx'\nimport { useReducer } from 'react'\nimport { PostTodo } from './PostTodo.jsx' \n// import { TaskCard } from './TaskCard.jsx'\n\nconst TodoForm = () => {\n  const [state,dispatch] = useReducer(PostTodo,INITIAL_TODO)\n  const [task,settask] = useState('');\n  function handelsubmit(e){\n    e.preventDefault();\n    const newtodo = {\n      time: Date.now(),\n      description:task,\n      isCOmpleted : false,\n    }\n    dispatch({type:TODO_ACTIONS.ADD_TODO,payload: newtodo})\n    console.log(task)\n    console.log(state)\n    settask('');\n  }\n  return (\n    <div>\n      <form \n      onSubmit={(e)=>{\n        handelsubmit(e)\n      }}\n      style={{\n        display: 'flex',\n        flexDirection:'row'\n      }}>\n\n      <textarea \n        value={task}\n        onChange={(e) =>{\n        settask(e.target.value)\n        // console.log(task)\n        // console.log(state)\n      }} \n        >\n\n      </textarea>\n      <button >ADD TASK</button>\n    </form>\n    {/* section of tasks */}\n    {state.items.map(e =>{\n      <p key ={e.time}>{e.description}</p>\n    })}\n  </div>\n  )\n}\n\nexport default TodoForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGP,UAAU,CAACC,QAAQ,EAACF,YAAY,CAAC;EAC1D,MAAM,CAACS,IAAI,EAACC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACnC,SAASa,YAAYA,CAACC,CAAC,EAAC;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,OAAO,GAAG;MACdC,IAAI,EAAEC,IAAI,CAACC,GAAG,EAAE;MAChBC,WAAW,EAACT,IAAI;MAChBU,WAAW,EAAG;IAChB,CAAC;IACDX,QAAQ,CAAC;MAACY,IAAI,EAACrB,YAAY,CAACsB,QAAQ;MAACC,OAAO,EAAER;IAAO,CAAC,CAAC;IACvDS,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;IACjBc,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC;IAClBG,OAAO,CAAC,EAAE,CAAC;EACb;EACA,oBACEN,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MACAsB,QAAQ,EAAGd,CAAC,IAAG;QACbD,YAAY,CAACC,CAAC,CAAC;MACjB,CAAE;MACFe,KAAK,EAAE;QACLC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAC;MAChB,CAAE;MAAAJ,QAAA,gBAEFrB,OAAA;QACE0B,KAAK,EAAErB,IAAK;QACZsB,QAAQ,EAAGnB,CAAC,IAAI;UAChBF,OAAO,CAACE,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAC;UACvB;UACA;QACF;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGS,eACXhC,OAAA;QAAAqB,QAAA,EAAS;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrB,EAEN7B,KAAK,CAAC8B,KAAK,CAACC,GAAG,CAAC1B,CAAC,IAAG;MACnB,aAAAR,OAAA;QAAAqB,QAAA,EAAkBb,CAAC,CAACM;MAAW,GAAtBN,CAAC,CAACG,IAAI;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAqB;IACtC,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAER,CAAC;AAAA9B,EAAA,CA5CKD,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}